//PARITION.JS: formats text data in preparation for a wordcount procedure
//Formatting involves  : removing punctuation and new lines
//Partitioning involves: splitting file into numerous files based on number of workers

//Code Requirements: temporary to allow partition.js to run isolated (?)
var fs = require('fs');
var max_workers = 4;

//Function Parameters: to be passed in
var filename = user_filename; //name of file to be split into partitions
var data = "";                //alternatively, the data read in from file earlier 
    data = fs.readFileSync(filename,'utf8');

//Function Variables:
var totalLineCount; var linesPerPartition;
var lower ; var upper;
var partitions = 0;

var partitionData = function() {
    //Remove control characters to get formatted data
    data = data.replace(/\r/g,"");

    //Produce array of substrings by splitting on newlines
    split_data = data.split("\n");
       
    //Determine word allocation across the number of workers specified by max_workers
    totalLineCount = split_data.length;
    console.log("Read in " + totalLineCount + " lines of data");
  
    linesPerPartition = Math.ceil(totalLineCount / max_workers);
    console.log("Lines per partition:",linesPerPartition);
    
    //Write lines to file as partitions
    lower = 0; upper = lower+linesPerPartition;
    while(lower+linesPerPartition < totalLineCount) {
        var lineList = split_data.slice(lower, upper);
        console.log("Split from " + lower + " to " + upper + " resulted in: " + lineList);
        var lines = "";

        lineList.forEach(function(line) {
            lines += line + "\r\n";
        });
        
        //Create Partition
        fs.writeFile('./user_files/partitions/' + (partitions + 1) + '.txt', lines, function(err) {
            if(err) {
                return console.log("Error writing to file from",__dirname);
            }         
        });
        
        partitions++; 
        
        lower += linesPerPartition;
        upper  = lower+linesPerPartition;
    }

    //Prevent out of bounds when creating list of the last few words
    if(lower<totalLineCount) {
        var lineList = split_data.slice(lower,totalLineCount); 
        var words = "";
        
        lineList.forEach(function(line) {
            lines += line + "\r\n";
        });
        
        fs.writeFile('./user_files/partitions/' + (partitions + 1) + '.txt', lines, function(err) {
            if(err) {
                return console.log("Error writing to file from",__dirname);
            }         
        });
        
        partitions++; 
    }

    return partitions;
}

partitionData();